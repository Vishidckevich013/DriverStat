import { useState } from 'react';
import './Header.css';
import DriveStatLogo from './DriveStatLogo';
import FeedbackModal from './FeedbackModal';
import { sendFeedbackToTelegram, getCurrentUser } from '../api/supabaseApi';

const Header = () => {
  const [isFeedbackModalOpen, setIsFeedbackModalOpen] = useState(false);

  const handleFeedbackSubmit = async (type: string, message: string) => {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
      const user = await getCurrentUser();
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
      const telegramSent = await sendFeedbackToTelegram(type, message, {
        name: user?.name || '–ì–æ—Å—Ç—å',
        email: user?.email
      });
      
      if (telegramSent) {
        alert('–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.');
      } else {
        // Fallback –µ—Å–ª–∏ Telegram –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏:', { type, message, user: user?.name });
        alert(`${type === 'complaint' ? '–ñ–∞–ª–æ–±–∞' : '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ'} –ø—Ä–∏–Ω—è—Ç–æ:\n${message}`);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  };

  return (
    <>
      <header className="header">
        <div className="header-brand">
          <DriveStatLogo size={40} className="header-logo" />
          <span className="header-title">DriveStat</span>
        </div>
        <div className="header-actions">
          <button className="notif" title="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è">üîî</button>
          <button 
            className="msg" 
            title="–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"
            onClick={() => setIsFeedbackModalOpen(true)}
          >
            üí¨
          </button>
          <span className="user">Ronald R.</span>
          <img className="avatar" src="https://randomuser.me/api/portraits/men/32.jpg" alt="User" />
        </div>
      </header>

      <FeedbackModal
        isOpen={isFeedbackModalOpen}
        onClose={() => setIsFeedbackModalOpen(false)}
        onSubmit={handleFeedbackSubmit}
      />
    </>
  );
};

export default Header;
